package edu.trinity.webapps.controllers

import javax.inject._

import play.api.mvc._
import play.api.data._
import play.api.data.Forms._
//import play.libs.Mail._

case class UserQuery(address: String, query: String)

object QueryForm {
  val form: Form[UserQuery] = Form(
      mapping(
      "address" -> email,
      "query" -> text
    )(UserQuery.apply)(UserQuery.unapply)
  )
}

@Singleton
class SiteController @Inject()(cc: ControllerComponents) extends AbstractController(cc) {

  def contact = Action { implicit request =>
    Ok(views.html.contact(QueryForm.form))
  }
  
  def postQuery = Action { implicit request =>
    // part of contact form. 
    //SimpleEmail email = new SimpleEmail();  
    Redirect(routes.SiteController.contact).withNewSession
  }

  def gallery = Action {
    Ok(views.html.gallery())
  }
    
  
  // go to news page
  def news = Action { implicit request =>
    Ok(views.html.news())
  }
  
  // go to the "about" page
  def about = Action { implicit request =>
    Ok(views.html.about())
  }
}
